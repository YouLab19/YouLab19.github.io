<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>芯片探针序列的基因组注释</title>
      <link href="/2020-01-02-%E8%8A%AF%E7%89%87%E6%8E%A2%E9%92%88%E5%BA%8F%E5%88%97%E7%9A%84%E5%9F%BA%E5%9B%A0%E7%BB%84%E6%B3%A8%E9%87%8A/"/>
      <url>/2020-01-02-%E8%8A%AF%E7%89%87%E6%8E%A2%E9%92%88%E5%BA%8F%E5%88%97%E7%9A%84%E5%9F%BA%E5%9B%A0%E7%BB%84%E6%B3%A8%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><!-- toc --><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>miRNA数据分析专题</title>
      <link href="/2019-12-31-miRNA%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%93%E9%A2%98/"/>
      <url>/2019-12-31-miRNA%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%93%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>miRNA数据分析专题</p><a id="more"></a><!-- toc --><hr><p> <strong>miRNA</strong>是一类长度在18到36bp的非编码RNA, 其功能属于转后后修饰调控，主要通过和mRNA的3’UTR区进行结合，结合区域称之为<code>seed</code>，当结合区域的序列完全配对时，诱导mRNA降解， 当只有部分序列配对时，抑制mRNA的翻译，从而发挥一个负调控的机制，本文整理了miRNA相关的资料。</p><h1 id="首先是miRNA简介和先关的数据库"><a href="#首先是miRNA简介和先关的数据库" class="headerlink" title="首先是miRNA简介和先关的数据库"></a>首先是miRNA简介和先关的数据库</h1><ol><li>microRNA简介</li><li>miRNA命名规范</li><li>mirbase数据库简介</li><li>Rfam数据库简介</li><li>RNAcentral:非编码RNA数据库</li></ol><h1 id="miRNA研究的核心内容是定量，差异和靶基因调控。定量包括了已知miRNA定量和预测新的miRNA"><a href="#miRNA研究的核心内容是定量，差异和靶基因调控。定量包括了已知miRNA定量和预测新的miRNA" class="headerlink" title="miRNA研究的核心内容是定量，差异和靶基因调控。定量包括了已知miRNA定量和预测新的miRNA"></a>miRNA研究的核心内容是定量，差异和靶基因调控。定量包括了已知miRNA定量和预测新的miRNA</h1><ol><li>已知miRNA定量原理揭秘</li><li>RNA二级结构表示法:Dot-Bracket notation</li><li>RNAfold预测RNA的二级结构</li><li>mirdeep2识别novel miRNA</li></ol><h1 id="miRNA靶基因相关的数据库如下"><a href="#miRNA靶基因相关的数据库如下" class="headerlink" title="miRNA靶基因相关的数据库如下"></a>miRNA靶基因相关的数据库如下</h1><ol><li>miRTarBase:实验验证的miRNA靶基因数据库</li><li>mirDIP:最全面的人类miRNA靶基因数据库</li><li>miRWalk:综合型的miRNA靶基因数据库</li><li>TargetScan:哺乳动物miRNA靶基因数据库</li><li>miRDB:软件预测的哺乳动物miRNA靶基因数据库</li><li>TarBase:有实验数据支持的miRNA靶基因数据库</li><li>HMDD:miRNA相关疾病数据库</li><li>TransmiR:转录因子和miRNA调控关系数据库</li><li>miRcode:人类miRNA结合图谱数据库</li><li>miRanda和mirSVR:预测miRNA结合位点的工具</li></ol><h1 id="通过miRNA与mRNA的调控关系，可以对差异miRNA对应的靶标mRNA进行富集分析"><a href="#通过miRNA与mRNA的调控关系，可以对差异miRNA对应的靶标mRNA进行富集分析" class="headerlink" title="通过miRNA与mRNA的调控关系，可以对差异miRNA对应的靶标mRNA进行富集分析"></a>通过miRNA与mRNA的调控关系，可以对差异miRNA对应的靶标mRNA进行富集分析</h1><ol><li>miRPath:miRNA相关GO和KEGG功能分析</li></ol><h1 id="miRNA的调控机制，使得其参与到很多疾病的发生发展过程中"><a href="#miRNA的调控机制，使得其参与到很多疾病的发生发展过程中" class="headerlink" title="miRNA的调控机制，使得其参与到很多疾病的发生发展过程中"></a>miRNA的调控机制，使得其参与到很多疾病的发生发展过程中</h1><ol><li>mir2disease:miRNA相关疾病数据库</li><li>MirSNP:miRNA相关SNP位点数据库</li><li>miRCancer:肿瘤相关的miRNA表达谱数据库</li></ol><p>单纯的miRNA数据分析，内容较少，更多的是作为一种调控机制，研究其与其他RNA分子的互作，比如ceRNA调控机制的研究，综合mRNA, lncRNA, circRNA和miRNA, 来研究其ceRNA调控网络关系。</p>]]></content>
      
      
      <categories>
          
          <category> miRNA数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> miRNA数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>single cell数据分析专题</title>
      <link href="/2019-12-20-%E5%8D%95%E7%BB%86%E8%83%9E%E8%BD%AC%E5%BD%95%E7%BB%84%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90%E4%B8%93%E9%A2%98/"/>
      <url>/2019-12-20-%E5%8D%95%E7%BB%86%E8%83%9E%E8%BD%AC%E5%BD%95%E7%BB%84%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90%E4%B8%93%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>单细胞转录组数据分析专题</p><a id="more"></a><!-- toc --><hr><h1 id="单细胞转录组数据分析专题"><a href="#单细胞转录组数据分析专题" class="headerlink" title="单细胞转录组数据分析专题"></a>单细胞转录组数据分析专题</h1><p><strong>single cell RNA sequencing</strong>,简称<strong>scRNA_seq</strong>, 指的是针对单个细胞的RNA进行分析。传统的转录组分析其样本为多种细胞的混合物，称之为<strong>bulk RNA seq</strong>, 而scRNA则针对单个细胞进行分析，避免了细胞异质性的问题，对于肿瘤等异质性强的组织,scRNA有着巨大优势。</p><p>同时scRNA可以对细胞亚群进行划分，研究细胞谱系，进一步了解和完善细胞分化过程。<br>目前scRNA的研究可谓是如火如荼，本文整理了scRNA数据分析的相关资料。</p><h1 id="1-10X-Genomics平台是目前最主流的单细胞平台，除了完整的文库制备外，还集成了对应的数据分析软件cell-ranger"><a href="#1-10X-Genomics平台是目前最主流的单细胞平台，除了完整的文库制备外，还集成了对应的数据分析软件cell-ranger" class="headerlink" title="1. 10X Genomics平台是目前最主流的单细胞平台，除了完整的文库制备外，还集成了对应的数据分析软件cell ranger"></a>1. 10X Genomics平台是目前最主流的单细胞平台，除了完整的文库制备外，还集成了对应的数据分析软件<code>cell ranger</code></h1><ul><li>scRNA_seq:单细胞转录组测序简介</li><li>使用cell ranger拆分10X单细胞转录组原始数据</li><li>使用cell ranger进行单细胞转录组定量分析</li><li>cell ranger分析结果详细解读</li><li>使用Loupe Cell Browser查看10X单细胞转录组分析结果</li></ul><h1 id="2-除了cell-ranger外，还有一些下游分析的R包"><a href="#2-除了cell-ranger外，还有一些下游分析的R包" class="headerlink" title="2. 除了cell ranger外，还有一些下游分析的R包:"></a>2. 除了cell ranger外，还有一些下游分析的R包:</h1><ul><li>Seurat:用于分析10X单细胞转录组数据的R包</li><li>单细胞转录组中的pseudotime究竟是什么</li><li>使用scater包对单细胞转录组数据进行降维分析</li><li>使用Rtsne包进行t-SNE降维分析</li><li>使用monocle包进行pseudotime分析</li></ul><p>单细胞转录组技术在发育进化， 肿瘤等疾病的研究领域有着广泛的应用前景，以上的资料只能算是基础概念的扫盲，更多的高级分析还需要深入学习。</p>]]></content>
      
      
      <categories>
          
          <category> single cell数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scRNA_seq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sci-hub客户端V5.0</title>
      <link href="/2019-11-04-sci-hub%E5%AE%A2%E6%88%B7%E7%AB%AFV5-0/"/>
      <url>/2019-11-04-sci-hub%E5%AE%A2%E6%88%B7%E7%AB%AFV5-0/</url>
      
        <content type="html"><![CDATA[<p>SCI-HUB客户端 V5.0版强势来袭，免费下载99.9%的文献~</p><a id="more"></a><!-- toc --><hr><h1 id="SCI-HUB客户端（文献神器v5-0）介绍："><a href="#SCI-HUB客户端（文献神器v5-0）介绍：" class="headerlink" title="SCI-HUB客户端（文献神器v5.0）介绍："></a>SCI-HUB客户端（文献神器v5.0）介绍：</h1><center><img src="/2019-11-04-sci-hub%E5%AE%A2%E6%88%B7%E7%AB%AFV5-0/1.png" class=""></center><center>文献神器V5.0界面截图</center>- 国内唯一免费下载国内外文献的软件- 你看它小巧玲珑，功能强大，仅489kb- 不仅能下载国内文献，又能下载国外文献。- 被广大研究生誉为文献神器！<h1 id="SCI-HUB客户端（文献神器v5-0）功能："><a href="#SCI-HUB客户端（文献神器v5-0）功能：" class="headerlink" title="SCI-HUB客户端（文献神器v5.0）功能："></a>SCI-HUB客户端（文献神器v5.0）功能：</h1><ul><li>可以可以下载Sci-hub数据库内的全部文献</li><li>提供了<font color=red size=5>谷歌学术入口，谷歌镜像入口，知网文献免费下载入口，百度文库原格式文档下载入口</font>。这款软件不仅可以下载国外数据库文献，国内的数据库文献也可以下载！</li><li>软件检索文献速度超级快，输入DOI号即可秒下文献。再也不用到处寻找sci-hub网址啦，软件包含自动检测sci-hub网址功能，保证你能够及时下载到文献。无论你的电脑是xp/win7/win8/win10系统，32位或者64位，都可使用本软件免费下载文献。</li></ul><h1 id="SCI-HUB客户端（文献神器v5-0）下载文献教程"><a href="#SCI-HUB客户端（文献神器v5-0）下载文献教程" class="headerlink" title="SCI-HUB客户端（文献神器v5.0）下载文献教程"></a>SCI-HUB客户端（文献神器v5.0）下载文献教程</h1><img src="/2019-11-04-sci-hub%E5%AE%A2%E6%88%B7%E7%AB%AFV5-0/3.png" class=""><img src="/2019-11-04-sci-hub%E5%AE%A2%E6%88%B7%E7%AB%AFV5-0/4.png" class=""><p>查询到文献DOI号后，直接在SCI-HUB搜索栏输入DOI号点击<font color=blue size=5>【立即下载】</font></p><p>希望这款高效的论文下载软件能让你的科研之路如虎添翼，不再为下载文献而烦恼，快来体验吧！</p><center><img src="/2019-11-04-sci-hub%E5%AE%A2%E6%88%B7%E7%AB%AFV5-0/6.png" class=""></center><p><font color=green size=5>文献神器v5.0版本下载地址</font>：<a href="http://www.9312.net/download.html" target="_blank" rel="noopener">http://www.9312.net/download.html</a></p>]]></content>
      
      
      <categories>
          
          <category> sci-hub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sci-hub </tag>
            
            <tag> 免费下载文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Juicer软件的安装详解</title>
      <link href="/2019-11-02-Juicer%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E8%AF%A6%E8%A7%A3/"/>
      <url>/2019-11-02-Juicer%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>Juicer软件的安装详解</p><a id="more"></a><!-- toc --><hr><p>软件安装是生物信息实战中最基础的技能之一，只有确保软件安装无误，后续使用起来才会得心应手，不会有很多的bug。juicer软件提供了Hi-C数据一键化分析的pipeline, 这样高度的封装使得用户操作起来更加简便，当然分析能力强大的同时其依赖的软件就会越多，安装过程的复杂程度也会有所提高，本文主要记录下该软件的安装过程，可以分为以下几个步骤</p><ol><li><p>安装依赖软件<br>juicer核心采用java语言进行开发，同时内置了perl, python, bash等开发的脚手架脚本。在序列比对环节使用了bwa软件，而后续操作比对产生的bam文件，会用到samtools软件。所以需要安装以下软件</p><ul><li>java</li><li>perl</li><li>python</li><li>GNU utils</li><li>bwa</li><li>samtools<br>这些软件是生信领域的基本软件，其安装过程就不详细展开了。</li></ul></li><li><p>建立目录结构<br>juicer软件要求一个固定的目录结构，新建一个名为juicer的目录，该目录即为软件的安装目录，在该目录下必须有以下4个子目录</p><img src="/2019-11-02-Juicer%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E8%AF%A6%E8%A7%A3/1.png" class="" title="This is an test image"></li></ol><p><code>references</code>目录用于存放参考基因组相关文件，<code>work</code>用于存放样本的序列文件和分析结果，<code>scripts</code>用于存放软件运行所需的脚本，<code>restriction_sites</code>用于存放参考基因组酶切图谱。</p><ol start="3"><li>下载juicer源代码<br>从github上下载juicer和jcuda的源代码，放置到<code>scripts</code>目录下。juicer可以在单机或者集群系统上运行，其中间脚本也对应了不同的系统，示意如下<img src="/2019-11-02-Juicer%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E8%AF%A6%E8%A7%A3/2.png" class="" title="This is an test image">其中的CPU目录就是单机服务器，而AWS, LSF, PBS等对应公有云和不同的集群系统。以CPU为例，下载过程如下:<pre><code># 下载源代码git clone https://github.com/aidenlab/juicer.git# 重命名为scripts目录ln -s juicer/CPU scriptscd scripts/commonwget https://hicfiles.tc4ga.com/public/juicer/juicer_tools.1.9.9_jcuda.0.8.jarln -s juicer_tools.1.9.9_jcuda.0.8.jar  juicer_tools.jar</code></pre></li><li>准备参考基因组文件<br>在<code>reference</code>目录下为参考基因组相关文件，其实就是对应的fasta序列文件和bwa 索引，示意如下:<pre><code>hg19.fastahg19.fasta.sahg19.fasta.annhg19.fasta.ambhg19.fasta.pachg19.fasta.bwt</code></pre></li></ol><p>自己根据需要从UCSC,NCBI等数据库中下载基因组fasta文件，并用bwa建立索引就可以了。</p><p>在<code>restriction_sites</code>目录下参考基因组酶切图谱，通过jucier内置的<code>generate_site_positions.py</code>脚本可以产生，该脚本位于源代码中的misc目录下，支持直接输出以下4种内切酶的酶切图谱</p><ol><li>HindIII</li><li>DpnII</li><li>MboI</li><li>Sau3AI</li></ol><p>用法如下:</p><pre><code>generate_site_positions.py HindIII hg19  hg19.fasta</code></pre><p>第一个参数为内切酶的名称，第二个参数为自定义的基因组版本，第三个参数为基因组fasta文件的路径，输出文件的名称为第二个参数和第一个参数用下划线链接，后缀为<code>txt</code>, 上述代码的输出文件为</p><pre><code>hg19_HindIII.txt</code></pre><ol start="5"><li>准备样本的fastq序列<br>执行完前4步软件就已经安装好了，软件运行时对样本文件的存放位置也有要求，必须位于<code>work</code>目录下，以样本名作为一个子目录，序列文件存放于<code>fastq</code>目录下，示意如下:<pre><code>/opt/juicer/work/MBR19/fastq/opt/juicer/work/MBR19/fastq/chr19_R1.fastq.gz/opt/juicer/work/MBR19/fastq/chr19_R2.fastq.gz</code></pre></li></ol><p>关于安装成功后的目录结构，可以参考以下链接:<br><a href="https://bcm.app.box.com/v/juicerawsmirror/folder/11284128669" target="_blank" rel="noopener">https://bcm.app.box.com/v/juicerawsmirror/folder/11284128669</a></p><p>juicer的安装过程算不上复杂，就是注意事项有很多，操作起来较为繁琐，只需要按照以上步骤耐心操作，还是可以快速安装成功的。</p>]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hi-C </tag>
            
            <tag> Juicer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Juicer:Hi-C数据处理分析的利器</title>
      <link href="/2019-11-02-Juicer-Hi-C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90%E7%9A%84%E5%88%A9%E5%99%A8/"/>
      <url>/2019-11-02-Juicer-Hi-C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90%E7%9A%84%E5%88%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>Juicer:Hi-C数据处理分析的利器</p><a id="more"></a><!-- toc --><hr><p>通过Hi-C数据可以分析TAD,chromatin loops等染色质空间结构的基本单元，加强我们对染色质三维结构的认知。面对海量的Hi-C数据，如何高效完成数据分析成为了一个挑战。</p><p>目前针对Hi-C数据的分析也有很多的软件可以用，而juicer无疑是使用的最广泛的软件之一。该软件的源代码托管在github上，网址如下</p><p><a href="https://github.com/aidenlab/juicer" target="_blank" rel="noopener">https://github.com/aidenlab/juicer</a></p><p>对应的文章发表在cell杂志上，链接如下</p><p><a href="https://www.cell.com/action/showPdf?pii=S2405-4712%2816%2930219-8" target="_blank" rel="noopener">https://www.cell.com/action/showPdf?pii=S2405-4712%2816%2930219-8</a></p><p>如下图所示，和其名字一样，juicer就像是一款榨汁机，输入Hi-C产生的原始fastq数据，经过层层加工，直到产生有效的数据分析结果。在整个数据分析过程中，使用者不需要高深的编程技巧，只需要一些基本的操作规范，人人都可以使用该软件来分析Hi-C数据。</p><img src="/2019-11-02-Juicer-Hi-C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90%E7%9A%84%E5%88%A9%E5%99%A8/1.png" class=""><p>juicer作为一款强大的分析软件，有以下几个特点:</p><ol><li><p>可以分析处理TB级别的海量数据，可以有效利用FPGA, GPU，集群等硬件资源来加速处理速度</p></li><li><p>提供了数据预处理，交互图谱创建和可视化，TAD和染色质环结构预测等一些列完整的pipeline</p></li><li><p>简单易用，不需要复杂的背景知识<br>该软件按照功能拆分成了三个大的分析步骤，依次运行即可得到最终的分析结果:</p></li><li><p>数据预处理，将原始的fastq序列比对参考基因组，识别其中的valid pairs, 并生成一个后缀为hic的文件</p></li><li><p>读取hic文件，创建可视化的交互图谱，也称之为contact map, 并进行归一化</p></li><li><p>采用算法预测TAD和染色质环等结构<br>完整功能示意如下：</p><img src="/2019-11-02-Juicer-Hi-C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90%E7%9A%84%E5%88%A9%E5%99%A8/2.png" class=""></li></ol><p>juicer采用ArrowHead算法对原始的交互矩阵进行转化，并预测TAD拓扑关联结构域，采用HiCUUPS算法识别染色质环chromatin loops。和其他Hi-C数据处理软件相比，juicer的功能更为齐全</p><img src="/2019-11-02-Juicer-Hi-C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90%E7%9A%84%E5%88%A9%E5%99%A8/3.png" class=""><p>juicer独创了一种名为hic的文件格式，用来存储Hi-C数据的相关信息，这种格式是一种高度压缩的二进制文件格式，在以下链接可以查看这种格式的详细信息</p><p><a href="https://github.com/theaidenlab/juicebox/blob/master/HiC_format_v8.docx" target="_blank" rel="noopener">https://github.com/theaidenlab/juicebox/blob/master/HiC_format_v8.docx</a></p><p>在后续的文章中，会详细介绍该软件的用法。</p>]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hi-C </tag>
            
            <tag> Juicer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用HiCUP进行Hi-C数据预处理 </title>
      <link href="/2019-11-02-%E4%BD%BF%E7%94%A8HiCUP%E8%BF%9B%E8%A1%8CHi-C%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/"/>
      <url>/2019-11-02-%E4%BD%BF%E7%94%A8HiCUP%E8%BF%9B%E8%A1%8CHi-C%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>使用HiCUP进行Hi-C数据预处理</p><a id="more"></a><!-- toc --><hr><p>HiCUP是一款经典的Hi-C数据预处理软件，官网如下</p><ul><li><a href="https://www.bioinformatics.babraham.ac.uk/projects/hicup/" target="_blank" rel="noopener">https://www.bioinformatics.babraham.ac.uk/projects/hicup/</a></li></ul><p>数据处理的流程示意如下:</p><img src="/2019-11-02-%E4%BD%BF%E7%94%A8HiCUP%E8%BF%9B%E8%A1%8CHi-C%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/1.png" class=""><p>首先通过<code>hicup_truncater</code>识别原始序列中的<code>junction reads</code>, 最典型的Hi-C的reads如下所示:</p><img src="/2019-11-02-%E4%BD%BF%E7%94%A8HiCUP%E8%BF%9B%E8%A1%8CHi-C%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/2.png" class=""><p>R1和R2来自两个不同的fragments, 当然这取决于插入偏度长度和读长的关系，当连接点与fragment两端的距离小于测序读长是，会发生下图所示的情况:</p><img src="/2019-11-02-%E4%BD%BF%E7%94%A8HiCUP%E8%BF%9B%E8%A1%8CHi-C%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/3.png" class=""><p>其中一端的序列是一个嵌合体序列，这样的序列在后续比对时会被过滤掉。为了保留这部分有效reads,<code>hicup_truncater</code>根据酶切位点的特征来识别所有reads上的连接位点，从而识别上图中的嵌合体序列，并对这样的序列末端进行切割，切除多余的嵌合体序列。切割完之后，这样的序列和普通的R1,R2就一样了，可以进行后续的mapping。</p><p>hicup_mapper将双端reads与参考基因组比对，由于Hi-C文库的R1和R2来源于空间结构近的染色质，其线性距离比传统的双端测序插入片段的长度大的多，如果直接进行双端比对，觉得部分reads都比对不上参考基因组，所以这里是对每一端的序列分别比对，然后再进行合并。</p><p><code>hicup_filter</code>对比对上的序列进行过滤，如下图所示:</p><img src="/2019-11-02-%E4%BD%BF%E7%94%A8HiCUP%E8%BF%9B%E8%A1%8CHi-C%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/4.png" class=""><p>只保留valid di-tags, 其他诸如<code>selft-ligation</code>, <code>Re-ligation</code>等片段都会被过滤掉。</p><p><code>hicup_deduplicator</code>用来去除PCR重复，因为valid reads的多少用来表征染色质互作的频率，PCR重复的reads数量会对这个信息造成干扰，如果不去除PCR重复，junction reads的数目多可能是PCR重复多，不一定是因为染色质交互频率强而导致的reads多。</p><p>软件的安装也很方便，直接下载解压缩即可。使用步骤如下</p><ol><li><p>准备参考基因组的索引文件<br>所有的参考基因组比对软件都需要事先对基因组建立索引，HiCUP支持使用<code>bowtie</code>或<code>bowtie2</code>进行比对，以<code>bowtie2</code>为例，建立基因组索引的方式如下:<br><code>bowite2-build hg19.fa hg19</code><br>第一个参数是基因组的fasta文件，第二个参数是输出的索引文件的名称。</p></li><li><p>准备参考基因组酶切位点图谱<br>采用hicup_digester这个脚本来创建基因组的酶切图谱，基本用法如下:</p><pre><code>hicup_digester \ --re1 A^AGCTT,HindIII \ --genome hg19_digester_db \ hg19.fa</code></pre></li></ol><p>根据限制性内切酶识别的位点，将基因组序列进行模拟酶切，得到所有可能的酶切片段。<code>--re1</code>指定切割位点的序列和内切酶的名字，<code>--genome</code>指定输出文件的名称。最终输出的文件名示例如下:<br><code>Digest_hg19_digester_db_HindIII_None_09-46-07_17-05-2019.txt</code><br>3. 编辑配置文件<br>首先通过如下命令生成一个配置文件的模板</p><pre><code>hicup --example</code></pre><p>该命令会生成一个名为<code>hicup_example.conf</code>的文件，在此基础上进行编辑就可以了。在配置中对每个选项都体用了详细的注释，根据需求修改即可。常用的修改的选项如下：</p><pre><code>#Path to the reference genome indices#Remember to include the basename of the genome indicesIndex: /bi/scratch/Genomes/Human/GRCh38/Homo_sapiens.GRCh38#Path to the genome digest file produced by hicup_digesterDigest: /bi/scratch/Genomes/Human/GRCh38/Digest_Homo_sapiens_GRCh38_HindIII_None_14-43-31_10-02-2016.txt.gz#FASTQ files to be analysed, placing paired files on adjacent liness_1_1_sequence.fastq.gzs_1_2_sequence.fastq.gz</code></pre><p>包括基因组索引和酶切图谱的路径，以及需要处理的Hi-C原始fastq文件的路径。</p><ol start="4"><li>运行<br>准备好配置文件之后，就可以运行了，用法如下<pre><code>hicup --config hicup.conf</code></pre></li></ol><p>在输出结果的目录会生成一个html文件，展示了质控的各项指标，内容如下所示</p><ul><li><strong>1. Truncating and Mapping</strong><img src="/2019-11-02-%E4%BD%BF%E7%94%A8HiCUP%E8%BF%9B%E8%A1%8CHi-C%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/5.png" class=""></li><li><strong>2. Filtering</strong><br>示意如下，可以看到valid  pairs的比例在50%左右<img src="/2019-11-02-%E4%BD%BF%E7%94%A8HiCUP%E8%BF%9B%E8%A1%8CHi-C%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/6.png" class=""></li><li><strong>3. Length Distribution</strong><img src="/2019-11-02-%E4%BD%BF%E7%94%A8HiCUP%E8%BF%9B%E8%A1%8CHi-C%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/7.png" class=""></li><li><strong>4. De-dupliation</strong><img src="/2019-11-02-%E4%BD%BF%E7%94%A8HiCUP%E8%BF%9B%E8%A1%8CHi-C%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/8.png" class="">除此之外，输出目录还有很多的文件，其中后缀为hicup_bam的文件包含了最终的de-duplication之后的reads的比对结果，可以用于下游的分析。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hi-C </tag>
            
            <tag> HiCUP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Promoter Capture Hi-C:研究启动子区染色质互作的利器</title>
      <link href="/2019-11-02-Promoter-Capture-Hi-C-%E7%A0%94%E7%A9%B6%E5%90%AF%E5%8A%A8%E5%AD%90%E5%8C%BA%E6%9F%93%E8%89%B2%E8%B4%A8%E4%BA%92%E4%BD%9C%E7%9A%84%E5%88%A9%E5%99%A8/"/>
      <url>/2019-11-02-Promoter-Capture-Hi-C-%E7%A0%94%E7%A9%B6%E5%90%AF%E5%8A%A8%E5%AD%90%E5%8C%BA%E6%9F%93%E8%89%B2%E8%B4%A8%E4%BA%92%E4%BD%9C%E7%9A%84%E5%88%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>Promoter Capture Hi-C:研究启动子区染色质互作的利器</p><a id="more"></a><!-- toc --><hr><p>Hi-C文库一次可以获取全基因组范围内互作的染色质片段，可以从全基因组的高度来研究染色质的空间结构特征。在Hi-C图谱中，染色质互作频率通过两个bin之间junction reads的数量来表示，和测序深度的概念类似，只有达到一定量的测序深度时才能够认为其代表的染色质互作信息是可靠的。</p><p>通常情况下，可以用于构建Hi-C图谱的有效reads的比例在50%左右，这样的一个利用率就要求原始的测序量相比其他组学要更多。</p><p>同时对于Hi-C图谱又有一个分辨率的说法，不同分辨率用于分析和识别不同层级的染色质结构，目前一个常用的说法是只有保证80%的bin之间的junction reads的个数在1000以上时，才表明数据适用于bin长度对应的分辨率。</p><p>目前测序深度和分辨率之间并没有一个明确的对应关系，根据经验值，测序深度在100X时，分辨率可以得到40kb左右，这样的一个分辨率也仅仅能达到TAD分析的要求，25kb和5kb分辨率对于测序深度的要求就更高了。</p><p>实验有效率和数据分辨率的要求都使得Hi-C文库的测序量必须非常的大，这样仅仅测序成本就非常的高了。</p><p>如果仅仅只是分析部分染色质片段之间的互作，最经典的莫过于研究promoter与其他染色质片段的互作，比如研究enhancer-promoter的互作，此时利用全基因组的Hi-C文库代价太大，而传统的3C,4C又无法满足要求。基于这样的一个需求驱动，Promoter Capture Hi-C技术应用而生。</p><p>Capture Hi-C技术就是在传统Hi-C文库的基础上，新增了一个捕获的过程，捕获目的片段用于后续的测序。Hi-C和Capture Hi-C的关系就好比全基因组测序和全外显子测序，Hi-C可以得到更加全面的信息，但是代价高昂，而Capture Hi-C只针对目标区域进行研究，同样的测序成本可以达到更高的测序深度，信息更加可靠，更加经济适用。</p><p>Promoter Capture Hi-C的文库构建示意如下:</p><img src="/2019-11-02-Promoter-Capture-Hi-C-%E7%A0%94%E7%A9%B6%E5%90%AF%E5%8A%A8%E5%AD%90%E5%8C%BA%E6%9F%93%E8%89%B2%E8%B4%A8%E4%BA%92%E4%BD%9C%E7%9A%84%E5%88%A9%E5%99%A8/1.png" class=""><p>核心就是在Hi-C文库之后，用设计的探针捕获promoter相关的reads,然后在进行测序。在测序深度足够的情况下，可以直接得到启动子区与其他染色质片段互作的可靠信息。</p><p>如果只想通过Hi-C技术来研究启动子的互作，Promoter Capture Hi-C无疑是更好的选择。</p>]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hi-C </tag>
            
            <tag> Promoter Capture Hi-C </tag>
            
            <tag> 启动子区染色质互作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chromatin loops:染色质环简介</title>
      <link href="/2019-11-02-chromatin-loops-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%8E%AF%E7%AE%80%E4%BB%8B/"/>
      <url>/2019-11-02-chromatin-loops-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%8E%AF%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<p>chromatin loops:染色质环简介</p><a id="more"></a><!-- toc --><hr><p>利用5kb分辨率的Hi-C基因组互作图谱，科学家识别到了chromatin loop这种染色质结构，文章发表在cell上,标题如下:<br>**<a href="https://www.cell.com/fulltext/S0092-8674(14)01497-401497-4" target="_blank" rel="noopener">A 3D Map of the Human Genome at Kilobase Resolution Reveals Principles of Chromatin Looping</a></p><p>通过对不同分辨率的Hi-C图谱进行分析，检测到了不同层级的染色质结构，从高到低依次为A/B compartments, subcompartments, TAD, chromation loop。Hi-C图谱和染色质结构模型的对应关系如下:</p><p>早期研究中利用1MB的Hi-C图谱 ，定义了每条染色质包含了A和B两个compartments。该文章中对100kb分辨率的Hi-C图谱进行聚类分析，发现A/B compartments进一步分成了6个子类，即subcompartments。对每条染色质的Hi-C图谱进行不同算法的聚类分析，除了19号染色质外，都得到了5个cluster，对于19号染色质，得到了6个cluster。</p><p>通过分析这些subcompartments与A/B compartments的关系，发现其中2个属于A compartments, 标记为A1和A2, 另外4个属于B comprtmants, 标记为B1, B2, B3, B4。</p><p>对于TAD拓扑关联结构域的识别，首创了一种<code>ArrowHead</code>算法，核心是对归一化之后的交互矩阵进行变换，变化的公式如下:</p><img src="/2019-11-02-chromatin-loops-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%8E%AF%E7%AE%80%E4%BB%8B/8.png" class=""><p>和DI的算法类似，i-d和i+d分别代表上下游的两个bin, 如果i和上游bin互作频率高，则A值为正数，如果和下游bin互作频率高，则A值为负数，如果相等，则为0。示意如下:</p><img src="/2019-11-02-chromatin-loops-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%8E%AF%E7%AE%80%E4%BB%8B/2.png" class=""><p>A图中的正方形区域为一个TAD domain, 经过转换后，变成了图B所示的形状。对应到整个互作矩阵上，看上去就是图E所示的箭头型。利用动态规划算法，识别变换后矩阵中的箭头区域，就可以预测TAD domain。文章中识别到的TAD domain,长度在40kb-3Mb，中位数为185kb。</p><p>对于染色质环，定义为Hi-C图谱中互作频率比周围相邻区域都高的格子区域，这样的区域称之为peak , 而对应的染色质区域称之为peak loci，如下图中蓝色圆点标记的区域:</p><img src="/2019-11-02-chromatin-loops-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%8E%AF%E7%AE%80%E4%BB%8B/3.png" class=""><p>如上图所示，通过与四周区域的交互频率进行比较鉴定peak区域，这要去HI-C图谱的分辨率在5kb以下。对于全基因组互作图谱而言，这个计算量是非常大的，文章作者也提供了一种名为HiCCUPS的算法，集成在了开发的juicer软件中。</p><p>进一步比较不同细胞系和不同物种间的染色质环区域，结果如下:</p><img src="/2019-11-02-chromatin-loops-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%8E%AF%E7%AE%80%E4%BB%8B/4.png" class=""><img src="/2019-11-02-chromatin-loops-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%8E%AF%E7%AE%80%E4%BB%8B/5.png" class=""><p>发现在不同细胞系间相对稳定，在物种间也具有一定进化保守性。对染色质环的分布位置进行分析，发现其处于TAD边界处。进一步分析发现染色质环中有很大部分为promoter-enhancer loops， 这也解释了增强子对靶基因的调控机制，虽然增强子与靶基因线性距离很远，但是增强子与靶基因启动子位于一个染色质环上，空间距离近，通过与启动子结合调控靶基因。</p><p>对染色质环对应区域富集的各种mark进行分析，发现其富集CTCF等转录因子, 如下图所示:</p><img src="/2019-11-02-chromatin-loops-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%8E%AF%E7%AE%80%E4%BB%8B/6.png" class=""><p>对于染色质环的空间结构，提出了如下模型:</p><img src="/2019-11-02-chromatin-loops-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%8E%AF%E7%AE%80%E4%BB%8B/7.png" class=""><p>通过构建5kb以下分辨率的Hi-C图谱，可以识别染色质环这种染色质结构单元。</p>]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hi-C </tag>
            
            <tag> chromatin loops </tag>
            
            <tag> 染色质环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TAD:拓扑关联结构域简介</title>
      <link href="/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/"/>
      <url>/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<p>TAD: 拓扑关联结构域简介</p><a id="more"></a><!-- toc --><hr><p>利用更低分辨率的Hi-C基因组互作图谱，科学家对染色质空间结构的了解不断深入。本文主要介绍<code>TAD</code>这种结构，<code>TAD</code>全称如下<strong>Topologically Assocaited Domain</strong><br>中文译作<strong>拓扑关联结构域</strong>，是一种首先在哺乳动物细胞中发现的染色质结构单元，对应的文章发表在<code>nature</code>上，文章标题如下：<br><strong><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3356448/" target="_blank" rel="noopener">Topological Domains in Mammalian Genomes Identified by Analysis of Chromatin Interactions</a></strong><br>将Hi-C基因组互作图谱的分辨率提高到100kb以下，发现了互作图谱中出现了一些self-interaction的区域，示意如下:</p><img src="/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/1.png" class=""><p>基因组互作图谱本质是一个对称矩阵，对角线两侧的信息是相等的。上图中只取了原始方阵中对角线一侧的信息，所以看上去是一个大的三角形，三角形的底边对应的是原始方阵中的对角线部分。</p><p>在上图中，互作强度由弱到强，单元格的颜色由白色过渡到红色。可以看到，在底边出重复出现了一些小的三角形区域，这些区域内部几乎全部是红色，说明这些区域内部的染色质片段间的互作频率高，这样的区域称之为self-interaction区域，而相邻的三角形区域间的互作频率较低，如下图所示:</p><img src="/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/2.png" class=""><p>红色三角形区域对应TAD内部区域的互作信息，而黑色区域对应TAD之间的互作信息。呈现到三角形的互作图谱上，对应的就是底边上有很多红色的小三角形，而三角形对应的互作区域则都为白色，科学家将这种重复出现的内部互作频率高，组间互作频率低的domain定义为<strong>topologically assocaited domain</strong>, 简称TAD，对应下图中的模型:</p><img src="/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/3.png" class=""><p>A和B对应两个TAD, 在TAD之间存在了一个边界，称之为TAD  doundary。为了准确地识别染色质中的TAD,定义了一种directionality index的统计量，简称DI，公式如下:</p><img src="/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/4.png" class=""><p>将分辨率降低到40kb,对于每个40kb的bin来说，A代表这个bin与上游2MB区域的互作reads, B代表这个bin与下游2MB区域的互作reads,E代表A和B的均值，采用类似卡方检验统计量的算法。空假设是这个bin与上游和下游的互作频率相同。如果与上下游的互作频率一致，则DI的值趋近于0。如下图所示:</p><img src="/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/5.png" class=""><p>可以看到从TAD的开始到终止，DI的值会有一个从正值逐渐减小到0，然后变为负值，在不断减小的情况。在TAD边界处，DI的值突然趋近于0，因为边界处与上下游的互作频率几乎相同，根据DI的这一分布规律，再结合隐马尔可夫模型，最终在小鼠胚胎干细胞中识别到了2200多个TAD区域，长度的平均值为880kb。</p><p>进一步分别对人和小鼠两种不同细胞系中的TAD进行识别和分析，发现TAD在不同细胞或者组织中相对稳定，在不同物种间也具有一定的保守性，结果如下图所示:</p><img src="/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/6.png" class=""><p>为了进一步探究TAD在染色质上的分布特征，科学家分析了TAD边界内各种mark的分布情况。首先是CTCF，结果如下所示:</p><img src="/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/7.png" class=""><p>发现在TAD边界处存在CTCF的富集，但并不是说所有的CTCF都集中出现在TAD边界处，所以进一步由探究了其他mark，包括各种组蛋白修饰等的分布，结果如下:</p><img src="/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/8.png" class=""><p>发现H3K4me3，H3K36me3, TSS， SINE重复元件等都有富集。进一步分析了基因的分布情况，结果如下</p><img src="/2019-11-02-TAD-%E6%8B%93%E6%89%91%E5%85%B3%E8%81%94%E7%BB%93%E6%9E%84%E5%9F%9F%E7%AE%80%E4%BB%8B/9.png" class=""><p>发现管家基因在TAD边界处存在富集。</p><p>通过40kb分辨率的Hi-C互作图谱，鉴定到了TAD这种在哺乳动物中存在的相对稳定，且具有一定进化保守性的染色质结构单元。</p>]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hi-C </tag>
            
            <tag> TAD </tag>
            
            <tag> 拓扑结构域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A/B compartment:染色质区室简介</title>
      <link href="/2019-11-02-A-B-compartment-%E6%9F%93%E8%89%B2%E8%B4%A8%E5%8C%BA%E5%AE%A4%E7%AE%80%E4%BB%8B/"/>
      <url>/2019-11-02-A-B-compartment-%E6%9F%93%E8%89%B2%E8%B4%A8%E5%8C%BA%E5%AE%A4%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<p>A/B compartment:染色质区室简介</p><a id="more"></a><!-- toc --><hr><p>Hi-C技术的出现推动了三维基因组学的发展，利用Hi-C技术，科学家不仅证实了染色质疆域的存在，而且进一步发现了更多染色质的三维特征。</p><p>Lieberman-Aiden等人利用Hi-C技术研究了人淋巴母细胞的三维结构，首次提出了A/B compartment的概念，文章发表在science上，标题如下:<br><strong><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2858594/" target="_blank" rel="noopener">Comprehensive Mapping of Long-Range Interactions Reveals Folding Principles of the Human Genome.Science. 2009 Oct 9; 326(5950): 289–293.</a></strong></p><p>构建1Mb分辨率下的基因组互作图谱，然后采用Oberved/Expected的算法对交互矩阵进行归一化，对归一化之后的矩阵计算泊松相关系数，矩阵对应的热图示意如下:</p><img src="/2019-11-02-A-B-compartment-%E6%9F%93%E8%89%B2%E8%B4%A8%E5%8C%BA%E5%AE%A4%E7%AE%80%E4%BB%8B/1.png" class=""><p>在归一化后的交互矩阵热图中，蓝色代表观测到的交互频率小于期望的交互频率，红色代表观测到的交互频率大于期望的交互频率。在相关系数矩阵的热图中，相关系数从-1到1，颜色从蓝色过渡到红色。</p><p>对相关系数矩阵进行PCA降维分析，在第一主成分PC1轴上，可以将染色质区域明确分成两个部分，称之为A/B compartment。对应下图Eigenvector正负两个部分:</p><img src="/2019-11-02-A-B-compartment-%E6%9F%93%E8%89%B2%E8%B4%A8%E5%8C%BA%E5%AE%A4%E7%AE%80%E4%BB%8B/2.png" class=""><p>通过对正负区域对应的基因表达量，组蛋白修饰，DNase酶超敏位点情况研究发现，发现在正数区域，包含的基因较多，对应的基因表达量相对较高，H3K36me3和DNA超敏位点的信号也相对较高，这些特征都表明这些区域是更加开放的，可接近的，转录激活的区域，将这个区域定义为A compartment, 对应开放染色质区域；而负数对应区域包含的基因个数较少，含量也低，将其定义为B  compartment, 对应封闭染色质区域。</p><p>后续文章也都基于这个思路来研究A/B compartment，现在已有很多成熟的软件可以使用，比如juice，homer 等，之后会详细介绍其用法。</p>]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hi-C </tag>
            
            <tag> A/B compartment </tag>
            
            <tag> 染色质区室 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解密Hi-C数据分析中的分辨率</title>
      <link href="/2019-11-02-%E8%A7%A3%E5%AF%86Hi-C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87/"/>
      <url>/2019-11-02-%E8%A7%A3%E5%AF%86Hi-C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87/</url>
      
        <content type="html"><![CDATA[<p>解密Hi-C数据分析中的分辨率</p><a id="more"></a><!-- toc --><hr><p>Hi-C基于传统的染色质构象捕获技术，在DNA连接时引入生物素标记分子，标记交联的染色质，然后富集带有生物素标记的junction reads,  再结合高通量测序和下游的生物信息学分析，可以在全基因组范围内研究染色质的空间互作关系。</p><p>在Hi-C文库中，我们得到的是互作染色质形成的<strong>junciton reads</strong>, 通过将这些reads 比对到参考基因组之后，可以分析染色质之间的互作。以下图为例：</p><img src="/2019-11-02-%E8%A7%A3%E5%AF%86Hi-C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87/1.png" class=""><p>图中蓝色和红色对应的染色质区域有互作，黑色和黄色对应的染色质区域有互作，在对应的Hi-C文库中，我们可以得到如下所示的junction reads</p><img src="/2019-11-02-%E8%A7%A3%E5%AF%86Hi-C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87/2.png" class=""><p>将这些reads正确比对到参考基因组上之后，就可以确定对应的染色质区域之间存在互作，而对应的junction reads的数目越多，则代表两个区域交互作用发生的频率越高。</p><img src="/2019-11-02-%E8%A7%A3%E5%AF%86Hi-C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87/3.png" class=""><p>对于所有区域的互作信息，通常会用一个交互矩阵interaction matirx来表示，该矩阵是一个方阵，每一行或者列都代表一个染色质区域，方格的颜色代表代表两个区域交互作用的强弱，示意如下：</p><img src="/2019-11-02-%E8%A7%A3%E5%AF%86Hi-C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87/4.png" class=""><p>在构建矩阵的过程中，我们首先需要确定每一行代表的染色质区域的范围，互作的片段是通过酶切来得到的, 理论上存在10的11方种唯一的酶切片段。如果想要精确分析所有酶切片段之间的交互，首先需要足够的测序深度，涵盖所有类型的酶切片段，这就要求非常庞大的测序数据量，其次对于如此庞大的交互矩阵，数数据分析阶段对于计算资源的消耗也是一个天文数字。</p><p>为了有效利用Hi-C文库中的信息，科学家提出了binning的概念，将基因组划分为等长的窗口，这样的窗口称之为bin, 利用窗口内reads的分布来研究不同窗口之间的互作关系。这样的处理相比最原始，最直接的染色质互作数据，其分辨率确实是有一定程度的丢失，但是基于全基因组范围，仍然能够挖掘出很多有效信息。</p><p>bin窗口的长度称之为分辨率。如果分辨率为1Mb,  以人类基因组为例，在交互矩阵中会有3000左右的行。bin窗口的长度越小，则基因组区域的划分越细致，对于染色质三维构象的研究的就越精细。</p><p>不同分辨率对于测序量的要求不同，适用的场景也不同。基于不同分辨率的Hi-C数据，陆续发现了A/B  compartments, TAD拓扑结构域，染色质环等空间结构。</p>]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hi-C </tag>
            
            <tag> 分辨率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3C的衍生技术简介</title>
      <link href="/2019-11-02-3C%E7%9A%84%E8%A1%8D%E7%94%9F%E6%8A%80%E6%9C%AF%E7%AE%80%E4%BB%8B/"/>
      <url>/2019-11-02-3C%E7%9A%84%E8%A1%8D%E7%94%9F%E6%8A%80%E6%9C%AF%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<p>3C的衍生技术简介</p><a id="more"></a><!-- toc --><hr><p>染色质构象捕获技术的发明，使得科学家可以通过实验手段来研究染色质的空间结构。传统的3C技术通量较低，只适用于分析one_vs_one的染色质互作，为了更加高效的进行3D基因组学的研究，科学家们在3C技术的基础上不断推陈出新，衍生出了各种技术，图示如下:</p><img src="/2019-11-02-3C%E7%9A%84%E8%A1%8D%E7%94%9F%E6%8A%80%E6%9C%AF%E7%AE%80%E4%BB%8B/1.png" class=""><p><strong>4C</strong>在junction reads基础上，进行二次酶切，形成包含junction reads的环状序列，然后针对感兴趣的基因组区域，设计PCR引物，将包含该基因组区域的环状片段扩增出来，从而可以研究该基因组片段与其他片段的相互作用关系，称之为one_vs_all。</p><p><strong>5C</strong>采用事先设计好的，两端带有通用引物的探针与junction reads杂交，进行PCR扩增，PCR产物两端包含了通用引物，下游可以结合芯片或者高通量测序来分析基因组区域的互作。事先可以针对感兴趣的多个基因组区域互作设计引探针，所以5C是一种many_vs_many的研究策略。</p><p>3C,4C,5C都是基于最原始的junction reads, 不同之处就在于不同引物设计策略导致的通量的差异。</p><p><strong>Hi-C</strong>在原始3C基础上有所变化，junction reads产生过程中添加生物素标记，然后采用抗体富集带有标记的junction reads, 再构建普通的测序文库，进行高通量测序。没有了针对目标区域设计引物的限制，再结合测序的高通量特点， 使得Hi-C可以一次性研究所有染色质片段之间的互作，称之为all_vs_all。</p><p><strong>ChIP-Ioop</strong>先用抗体捕获交联的染色质片段，后续的步骤和3C一样，针对两个目标区域的互作设计引物来进行one_vs_one的研究；ChIA-PET与之类似，只不过在粘性末端连接的过程中引入一段通用的adapter序列，以此为桥梁将互作的两个染色质片段连接起来，后续在进行酶切，加接头，测序，也可以进行all_vs_all的染色质互作研究。</p><p>考虑到不同技术的成本和限制，各自有不同的应用场景，其中Hi-C和ChIA-PET技术由于其研究对象的高通量性，一次可以获取所有染色质片段互作信息，成为了最热门的3D基因组学研究技术，极大的推动了3D基因组学的发展。</p>]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3C </tag>
            
            <tag> Hi-C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chromosome conformation capture:染色质构象捕获技术</title>
      <link href="/2019-11-02-chromosome-conformation-capture-%E6%9F%93%E8%89%B2%E8%B4%A8%E6%9E%84%E8%B1%A1%E6%8D%95%E8%8E%B7%E6%8A%80%E6%9C%AF/"/>
      <url>/2019-11-02-chromosome-conformation-capture-%E6%9F%93%E8%89%B2%E8%B4%A8%E6%9E%84%E8%B1%A1%E6%8D%95%E8%8E%B7%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>chromosome conformation capture:染色质构象捕获技术</p><a id="more"></a><!-- toc --><hr><p><strong>chromosome conformation capture</strong>称之为<strong>染色质构象捕获</strong>，简写为<strong>3C</strong>, 是一种生物化学手段，可以通过实验手段来研究空间结构上相近的染色质，本文简单介绍下3C的实验过程和原理。</p><p>实验流程如下所示:</p><img src="/2019-11-02-chromosome-conformation-capture-%E6%9F%93%E8%89%B2%E8%B4%A8%E6%9E%84%E8%B1%A1%E6%8D%95%E8%8E%B7%E6%8A%80%E6%9C%AF/1.png" class=""><p>可以分成以下4个步骤</p><ol><li>crosslink chromatin, 染色质交联。通过甲醛固定细胞，可以在空间结构相邻的染色质片段之间产生共价氢键</li><li>digest crosslinked chromatin, 采用DNA限制性内切酶消化染色质，在酶切位点会形成粘性末端</li><li>ligation, 连接，通过DNA连接酶链接粘性末端</li><li>reverse crosslinking, 反交联，用蛋白酶消除DNA的交联状态</li></ol><p>通过以上步骤处理之后，可以得到不同染色质片段连接在一起的DNA，这样的片段是一个嵌合体，由来自空间结构相近的两个不同DNA片段构成，称之为junction reads。<br>通过实验处理，将三维结构上相近的染色质转换成了一维的DNA片段，所以这一技术称之为染色质构象捕获。通过分析junction reads中的不同部分分别对应哪些基因组区域，可以得到DNA之间的相互作用关系。</p><p>在传统的3C技术中，得到junction reads后，需要针对感兴趣的两个目标片段设计引物，通过PCR反应将这两个区域构成的junction reads扩增出来，通过PCR产物的有无和定量，可以评估目的片段之间相互作用关系的有无和强度。</p><img src="/2019-11-02-chromosome-conformation-capture-%E6%9F%93%E8%89%B2%E8%B4%A8%E6%9E%84%E8%B1%A1%E6%8D%95%E8%8E%B7%E6%8A%80%E6%9C%AF/2.png" class=""><p>由于需要同时考虑两个DNA片段来设计引物，所以传统的3C技术只适用于研究两个DNA片段之间的相互作用，即one-to-one， 而且受到PCR产物长度的限制，只适用于研究线性距离较近的片段之间的互作。</p><p>科学家们在3C基础上不断革新，陆续发明了4C,5C,Hi-C等等更高通量，更高分辨率的研究手段，促成了三维基因组学的兴起和发展，在后续文章中再进行介绍。</p>]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hi-C </tag>
            
            <tag> chromosome conformation capture </tag>
            
            <tag> 染色质构象捕获技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chromosome-territories:染色质疆域简介</title>
      <link href="/2019-11-02-chromosome-territories-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%96%86%E5%9F%9F%E7%AE%80%E4%BB%8B/"/>
      <url>/2019-11-02-chromosome-territories-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%96%86%E5%9F%9F%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<p>chromosome-territories:染色质疆域简介</p><a id="more"></a><!-- toc --><hr><p>人类基因组大小在3G左右，这么多的DNA线性排列，完全展开其长度可以达到2米，而细胞直径是微米级别的，这意味着DNA在细胞核内肯定是高度折叠的。众所周知，结构决定功能，这样的空间结构势必对于生命体复杂的功能造成了影响。</p><p>随着基因组学研究的发展，由结构基因组学过渡到功能基因组学，科学家对于基因组各种元件的功能及其调控关系有了进一步的了解，为研究基因组三维结构和基因功能之间的关系提供了坚实的基础，进而诞生了一种新的研究领域，称之为三维基因组学，专注于研究基因组的空间结构和基因表达，调控功能的关系和影响。</p><p>随着更高分辨率的显微镜的发明，科学家对于细胞组成的不断深入，于此类似，对于染色质空间结构的认知也是一个分辨率不断提高的过程。对于染色质在细胞核内的分布，最早提出的概念为<strong>chromosome territories</strong>，翻译成染色质疆域，简写为CT,也有叫做染色质边界的。</p><p>这个概念指的是染色质在细胞核内分布的并不是随机分布的，而是不同染色体占据不同的空间。科学家通过染色体损伤实验证明了这一现象，如下图所示：</p><img src="/2019-11-02-chromosome-territories-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%96%86%E5%9F%9F%E7%AE%80%E4%BB%8B/1.png" class=""><p>左侧的图代表染色质疆域分布模型，右侧图代表染色质随机分布模型。通过激光造成基因组的局部损伤，如果随机分布，则受损区域会分布在多个染色体上，如果是疆域模型的话，则只会集中在部分染色体。显微观察的结果如下:</p><img src="/2019-11-02-chromosome-territories-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%96%86%E5%9F%9F%E7%AE%80%E4%BB%8B/2.png" class=""><p>每行代表一个样本，黑色区域为损伤区域，可以看到损伤区域只集中在部分染色体上。</p><p>染色质疆域是科学家对染色质空间结构认知的第一步，在此基础上，随着染色质构建捕获技术的发明和发展，人们对染色质空间结构的认知不断加深，相继提出了拓扑结构域TAD,染色质环等更高分辨率的构成单元，示意如下:</p><img src="/2019-11-02-chromosome-territories-%E6%9F%93%E8%89%B2%E8%B4%A8%E7%96%86%E5%9F%9F%E7%AE%80%E4%BB%8B/3.png" class="">]]></content>
      
      
      <categories>
          
          <category> Hi-C数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hi-C </tag>
            
            <tag> chromosome-territories </tag>
            
            <tag> 染色质疆域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Single Cell ATAC Install and Usage</title>
      <link href="/2019-10-30-Single_Cell_ATAC_Usage/"/>
      <url>/2019-10-30-Single_Cell_ATAC_Usage/</url>
      
        <content type="html"><![CDATA[<p>Single Cell ATAC Install and Usage</p><a id="more"></a><!-- toc --><h1 id="Single-Cell-ATAC-Install-and-Usage"><a href="#Single-Cell-ATAC-Install-and-Usage" class="headerlink" title="Single Cell ATAC Install and Usage"></a>Single Cell ATAC Install and Usage</h1><p>参考文献：<a href="https://www.ncbi.nlm.nih.gov/pubmed/?term=Massively+parallel+single-cell+chromatin+landscapes+of+human+immune+cell+development+and+intratumoral+T+cell+exhaustion" target="_blank" rel="noopener">Massively parallel single-cell chromatin landscapes of human immune cell development and intratumoral T cell exhaustion.Nat Biotechnol. 2019 Aug;37(8):925-936.</a></p><h2 id="System-Requirements"><a href="#System-Requirements" class="headerlink" title="System Requirements"></a>System Requirements</h2><p><strong>Hardware:</strong><br>Cell Ranger ATAC pipelines run on Linux systems that meet these minimum requirements:</p><ul><li>8-core Intel or AMD processor (16 cores recommended)</li><li>64GB RAM (128GB recommended)</li><li>1TB free disk space</li><li>64-bit CentOS/RedHat 6.0 or Ubuntu 12.04</li></ul><p><strong>Software:</strong><br>In order to run cellranger-atac mkfastq, the following software needs to be installed:</p><ul><li>Illumina® bcl2fastq: bcl2fastq must be version 2.17 or higher. It supports most sequencers running RTA version 1.18.54 or higher. If you are using NovaSeq™, the pipelines require version 2.20 or higher. If your sequencer is running an older version of RTA, then the pipelines require bcl2fastq 1.8.4.<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作:"></a>准备工作:</h2><h3 id="1-软件下载"><a href="#1-软件下载" class="headerlink" title="1.软件下载:"></a>1.软件下载:</h3>先去10xgenomics官网下载需要用到的数据和软件。因为上面提到的文章是Greenleaf教授和10xgenomics公司合作一起做的，所以前期的处理都是用cellranger-atac来做的。而且10xgenomics官网还提供了示例数据可以让我们这群菜鸡们学习。代码直接copy：<pre><code>wget -O cellranger-atac-1.1.0.tar.gz &quot;http://cf.10xgenomics.com/releases/cell-atac/cellranger-atac-1.1.0.tar.gz?Expires=1572437506&amp;Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cDovL2NmLjEweGdlbm9taWNzLmNvbS9yZWxlYXNlcy9jZWxsLWF0YWMvY2VsbHJhbmdlci1hdGFjLTEuMS4wLnRhci5neiIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTU3MjQzNzUwNn19fV19&amp;Signature=d23dUiAoSbRdnq3o8QfltPWgc7CfTRgA7-LzC4rC-m5kEPTKOUpCfcBT8AhWzQH-vo6pIxEc-GNGME~Yzqt9zDVFlHo-h6thslW~vCGuvgbR8Dl3F7R7iPF3p8I61EW~tyM5okumiOirqswpEXpAnHyWwU2fg2cguFfhwOSQpWuVMvebZOc70HFPskV5H6AG2EWkbpkIadfPAPfhpygV0Opn-D5V2~Oqty6c6f2y8cgASw-KYVA4azy3Gv9bFlTVOfahuFvVl0Gdbb90vWOa7Cb1HiGZwTe5N9yI1buXTLzVIuyksMr7rNG0rYncgQKxT1xedsDj9BWAcCwUjK4hrw__&amp;Key-Pair-Id=APKAI7S6A5RYOXBWRPDA&quot;</code></pre>解压后得到一个cellranger-atac-1.1.0的路径：{% asset_img 3.png %}同样的，我们需要把这个路径加入到环境变量中，这样以后用的时候就会比较方便了。（建议将下面代码加入到~/.bashrc中，这样就会永久生效了）:<pre><code>export PATH=~/scATAC/cellranger-atac-1.1.0:$PATH</code></pre>大家自行修改自己的家目录路径。</li></ul><p><strong>Site Check Script:</strong></p><ul><li>Next, run the bundled site check script and send the output to 10x Genomics. We will review the information to ensure that Cell Ranger ATAC will run smoothly once you have generated your own Chromium data. Assuming you have installed Cell Ranger ATAC as described above, run the following commands.<pre><code>$ cellranger-atac sitecheck &gt; sitecheck.txt$ cellranger-atac upload your@email.edu sitecheck.txt</code></pre></li></ul><p><strong>Verify Installation:</strong></p><ul><li>To ensure that the cellranger-atac pipeline is installed correctly, use cellranger-atac testrun. This test can take up to 60 minutes on a sixteen-core workstation. Assuming you have installed Cell Ranger ATAC into /opt, the command to run the test would look like the following:</li></ul><pre><code>cellranger-atac testrun --id=tinycellranger-atac testrun 1.1.0Copyright (c) 2018 10x Genomics, Inc.  All rights reserved.-------------------------------------------------------------------------------Running Cell Ranger ATAC in test mode...Martian Runtime - 3.2.1Running preflight checks (please wait)...2018-09-17 20:44:33 [runtime] (ready)           ID.tiny.SC_ATAC_COUNTER_CS.SC_ATAC_COUNTER._BASIC_SC_ATAC_COUNTER._ALIGNER.SETUP_CHUNKS2018-09-17 20:44:33 [runtime] (run:local)       ID.tiny.SC_ATAC_COUNTER_CS.SC_ATAC_COUNTER._BASIC_SC_ATAC_COUNTER._ALIGNER.SETUP_CHUNKS.fork0.chnk0.main...Pipestance completed successfully!Saving diagnostics to tiny/tiny.mri.tgz</code></pre><h3 id="2-参考基因组下载"><a href="#2-参考基因组下载" class="headerlink" title="2.参考基因组下载"></a>2.参考基因组下载</h3><p><strong>GRCh38 Reference - 1.1.0 (April 16, 2019)</strong></p><ul><li>Human reference (GRCh38) dataset required for Cell Ranger ATAC.<pre><code>wget http://cf.10xgenomics.com/supp/cell-atac/refdata-cellranger-atac-GRCh38-1.1.0.tar.gz</code></pre></li></ul><p><strong>hg19 Reference - 1.1.0 (April 16, 2019)</strong></p><ul><li>Human reference (hg19) dataset required for Cell Ranger ATAC.<pre><code>wget http://cf.10xgenomics.com/supp/cell-atac/refdata-cellranger-atac-b37-1.1.0.tar.gz</code></pre></li></ul><p><strong>mm10 Reference - 1.1.0 (April 16, 2019)</strong></p><ul><li>Mouse reference (mm10) dataset required for Cell Ranger ATAC.<pre><code>wget http://cf.10xgenomics.com/supp/cell-atac/refdata-cellranger-atac-mm10-1.1.0.tar.gz</code></pre><h3 id="示例数据下载"><a href="#示例数据下载" class="headerlink" title="示例数据下载"></a>示例数据下载</h3></li></ul><p><strong>demo数据</strong>地址在：<a href="https://support.10xgenomics.com/single-cell-atac/datasets" target="_blank" rel="noopener">https://support.10xgenomics.com/single-cell-atac/datasets</a></p>{% asset_img 2.png %}<p>下了一个1k Peripheral blood mononuclear cells (PBMCs) from a healthy donor (v1.0)的数据:<br>代码如下：</p><pre><code>wget http://cf.10xgenomics.com/samples/cell-atac/1.1.0/atac_pbmc_1k_v1/atac_pbmc_1k_v1_fastqs.tar</code></pre><h2 id="cellranger-atac运行代码："><a href="#cellranger-atac运行代码：" class="headerlink" title="cellranger-atac运行代码："></a>cellranger-atac运行代码：</h2><p><a href="https://support.10xgenomics.com/single-cell-atac/software/pipelines/latest/using/count" target="_blank" rel="noopener">官网说明贴</a></p><pre><code>cellranger-atac count         --id=ID         --fastqs=PATH         --reference=PATH         [--sample=PREFIX]        [options] 必须参数： --id=ID：这里写上一个ID号，程序一旦运行就会生成一个同名的目录用来存放输出结果 --fastqs=PATH：这里写上你的数据位置 --reference=PATH：写上你的参考基因组文件路径 --sample=PREFIX：这里根据你的fastq文件来填写，规则和cellranger的文件命名格式有关，反正就是写“_S1”前面的一系列字符串 可选参数： --localvmem=NUM：指定程序可用的内存GB --localcores=NUM：指定程序可用的核心数</code></pre><h2 id="关于输出文件："><a href="#关于输出文件：" class="headerlink" title="关于输出文件："></a>关于输出文件：</h2><pre><code>2018-09-17 22:26:56 [runtime] (join_complete)   ID.sample345.SC_ATAC_COUNTER_CS.SC_ATAC_COUNTER.CLOUPE_PREPROCESSOutputs:- Per-barcode fragment counts &amp; metrics:        /opt/sample345/outs/singlecell.csv- Position sorted BAM file:                     /opt/sample345/outs/possorted_bam.bam- Position sorted BAM index:                    /opt/sample345/outs/possorted_bam.bam.bai- Summary of all data metrics:                  /opt/sample345/outs/summary.json- HTML file summarizing data &amp; analysis:        /opt/sample345/outs/web_summary.html- Bed file of all called peak locations:        /opt/sample345/outs/peaks.bed- Raw peak barcode matrix in hdf5 format:       /opt/sample345/outs/raw_peak_bc_matrix.h5- Raw peak barcode matrix in mex format:        /opt/sample345/outs/raw_peak_bc_matrix- Directory of analysis files:                  /opt/sample345/outs/analysis- Filtered peak barcode matrix in hdf5 format:  /opt/sample345/outs/filtered_peak_bc_matrix.h5- Filtered peak barcode matrix:                 /opt/sample345/outs/filtered_peak_bc_matrix- Barcoded and aligned fragment file:           /opt/sample345/outs/fragments.tsv.gz- Fragment file index:                          /opt/sample345/outs/fragments.tsv.gz.tbi- Filtered tf barcode matrix in hdf5 format:    /opt/sample345/outs/filtered_tf_bc_matrix.h5- Filtered tf barcode matrix in mex format:     /opt/sample345/outs/filtered_tf_bc_matrix- Loupe Cell Browser input file:                /opt/sample345/outs/cloupe.cloupe- csv summarizing important metrics and values: /opt/sample345/outs/summary.csvPipestance completed successfully!</code></pre><p>The output of the pipeline will be contained in a folder named with the sample ID you specified (e.g. sample345). The subfolder named outs will contain the main pipeline output files:<br>File Name|Description<br>–|:–|<br>singlecell.csv|Per-barcode fragment counts &amp; metrics<br>possorted_bam.bam|Position sorted BAM file<br>possorted_bam.bam.bai|Position sorted BAM index<br>summary.json|Summary of all data metrics<br>web_summary.html|HTML file summarizing data &amp; analysis<br>peaks.bed|Bed file of all called peak locations<br>raw_peak_bc_matrix.h5|Raw peak barcode matrix in hdf5 format<br>raw_peak_bc_matrix|Raw peak barcode matrix in mex format<br>analysis|Directory of analysis files<br>filtered_peak_bc_matrix.h5|Filtered peak barcode matrix in hdf5 format<br>filtered_peak_bc_matrix|Filtered peak barcode matrix<br>fragments.tsv.gz|Barcoded and aligned fragment file<br>fragments.tsv.gz.tbi|Fragment file index<br>filtered_tf_bc_matrix.h5|Filtered tf barcode matrix in hdf5 format<br>filtered_tf_bc_matrix|Filtered tf barcode matrix in mex format<br>cloupe.cloupe|Loupe Cell Browser input file<br><strong>web_summary.html</strong></p><ul><li>cellranger-atac和最基础的cellranger一样，也是会生成一个html的结果报表（很长，没有截全，后面分开单独展示）:</li></ul><p><strong>Sample</strong></p><ul><li>这一列几乎就是总结了下运行时各个文件的情况，包括文件在哪里，基因组在哪里之类的。</li></ul><p><strong>Sequencing</strong></p><ul><li>主要是一些质控的指标QC metrics</li></ul><p><strong>Cells</strong></p><ul><li>主要是关于细胞的一些metadata数据，同时提供了2个图：左图中如果峰越陡峭，则说明有细胞的油滴和没有细胞的空油滴分开的效果好。<br>右图中则展示了有细胞油滴和空油滴中捕获到的序列片段数目。</li></ul><p><strong>Cell Clustering</strong></p><ul><li>根据染色体可及性的关系做了一个细胞分群的图，有相似的染色体开放模式的细胞被分到了一群（左图）。右图：根据左图的分群情况，展示the number of unique fragments，也就是fragments 的种类数吧（不是绝对数目，而是一个种类数目。例如：一个细胞表达3个a，4个b，那么这里the number of unique fragments就是2。如果另一个细胞表达1个a，1个b，1个c，那么这里the number of unique fragments就是3），有多少种类型，就会有一个具体的数值，根据数值大小进行上色。在这个图里则是：颜色越黄，那么这群细胞中找到的fragments类型越多。</li></ul><p><strong>Insert Sizes</strong><br>这里的插入片段也就是ATAC建库时切取的片段大小。根据之前讲过的Tn5酶的原理可以知道，我们的建库时Tn5酶会把开放的染色体区域给切割，形成的片段都是以核小体为基本单位的，而每个核小体由146bp的DNA缠绕组蛋白八聚体1.75圈形成，组蛋白H1在核心颗粒外结合额外20bp DNA。</p><p>10x官网对于上面两个参数的解释是：<br><em>Fragments in nucleosome-free regions</em>：Fragments ＜147bp的片段数，因为核小体的长度为146bp，所以这个指标说的应该是那些核小体之间的连接片段。<br><em>Fragments flanking a single nucleosome</em>：147bp＜Fragments ＜294bp的片段数，这个应该是关于核小体缠绕的序列片段，加上建库时的接头序列，肯定长度要比146bp要长。</p><p><strong>Targeting</strong><br>这里参数有很多</p><ul><li><p><strong>Enrichment score of transcription start sites:</strong><br>这个值反映了染色体可及性的一个信号，对于每个细胞都会有一个这个值，但是这里只展示了一个最大值。</p></li><li><p><strong>Fraction of fragments overlapping TSS：</strong><br>测序得到的fragments 在 GENCODE 注释文件里能比对上去的比例。（如果值比较低可能是之前没人报道）</p></li><li><p><strong>Fraction of fragments overlapping called peaks：</strong><br>The fraction of fragments (that passed all filters) overlapping the  set of peaks called for the library.</p></li><li><p><strong>Fraction of fragments overlapping any targeted region:</strong><br>测序得到的fragments能够比对到 targeted regions （ transcription start sites, DNase hypersensitive regions, enhancer or promoter regions ）这些位置的比例。</p></li><li><p><strong>Fraction of total read pairs mapped confidently to genome (&gt;30 mapq)</strong><br>有着较高比对质量的 Fraction 比例</p></li><li><p><strong>Fraction of total read pairs that are unmapped and in cell barcodes</strong><br>在一定可信程度下，没能比对到参考基因组上的片段</p></li><li><p><strong>Fraction of total read pairs in mitochondria and in cell barcodes</strong><br>比对到线粒体基因上的 Fraction 比例</p></li></ul><p>关于两个图：<br>左图：TSS的具体情况<br>右图：每个点代表一个细胞。横坐标是每个细胞中的Fraction 数目，纵坐标是比对到基因组上的Fraction 百分比。<br>红色的是没有细胞的液滴，蓝色是有细胞的液滴。</p><p><strong>Library Complexity</strong><br>先看左边的3个指标：</p><ul><li><strong>Percent duplicates</strong><br>PCR重复的比例</li><li><strong>Sequencing saturation</strong><br>unique read pairs /  estimated library complexity 算出来的一个比值</li><li><strong>Estimated bulk library complexity</strong><br>当前测序条件下，预估的测序文库的复杂度关于右图：<br>横坐标是每个细胞中的reads数目，纵坐标是每个细胞中的Fraction种类数目。</li></ul><p><strong>peak_annotation.tsv</strong></p><pre><code> $ head peak_annotation.tsv peakgenedistancepeak_type chr1_629780_630114OR4F1656559distal chr1_633810_634239OR4F1652434distal chr1_778340_779198OR4F16-91668distal chr1_827065_827882SAMD11-97856distal chr1_869626_870213SAMD11-55525distal chr1_904458_905535SAMD11-20203distal chr1_923844_923904SAMD11-1834distal chr1_941868_941942SAMD1116128distal chr1_958890_959787NOC2L0promoter</code></pre><p><strong>gene</strong>指的是找到一个离peaks最近的基因。因为我们关注的是找到motif后，当TF结合在motif后对相应基因的表达调控情况，到底是会因此该基因的过表达还是表达减弱。</p><p><strong>distance</strong>指的是peak距离那个基因的TSS（转录起始位点）的距离。负数表示在TSS上游，0表示peaks包含了TSS，正数表示在TSS下游。</p><p><strong>peak_type</strong>有3种类型，分别为 “promoter”, “distal” or “intergenic”。根据我对peak_annotation.tsv文件的探索，发现：distal型的peak一般距离TSS非常远，一般成千bp。</p><h2 id="Generating-FASTQs-with-cellranger-atac-mkfastq"><a href="#Generating-FASTQs-with-cellranger-atac-mkfastq" class="headerlink" title="Generating FASTQs with cellranger-atac mkfastq"></a>Generating FASTQs with cellranger-atac mkfastq</h2><p><strong>Table of Contents</strong></p><ul><li>Overview</li><li>Example Workflows</li><li>Arguments and Options</li><li>Example Data</li><li>Running mkfastq with a simple CSV samplesheet</li><li>Running mkfastq with an Illumina® Experiment Manager sample sheet</li><li>Checking FASTQ output</li><li>Reading Quality Control Metrics</li><li>Troubleshooting</li></ul><h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a><strong>Overview</strong></h3><p>The cellranger-atac workflow starts by demultiplexing the Illumina® sequencer’s base call files (BCLs) for each flowcell directory into FASTQ files. 10x recommends using cellranger-atac mkfastq, a pipeline that wraps bcl2fastq from Illumina® and provides a number of convenient features in addition to the features of bcl2fastq:</p><ul><li>Translates 10x sample index set names into the corresponding list of four sample index oligonucleotides. For example, well A1 can be specified in the samplesheet as SI-NA-A1, and cellranger-atac mkfastq will recognize the four oligos AAACGGCG, CCTACCAT, GGCGTTTC, and TTGTAAGA and merge the resulting FASTQ files.</li><li>Supports a simplified CSV samplesheet format to handle 10x use cases.</li><li>Generates sequencing and 10x-specific quality control metrics, including barcode quality, accuracy, and diversity.</li><li>Supports most bcl2fastq arguments, such as –use-bases-mask.</li></ul><h3 id="Example-Workflows"><a href="#Example-Workflows" class="headerlink" title="Example Workflows"></a><strong>Example Workflows</strong></h3><p>In this example, we have two 10x libraries (each processed through a separate Chromium chip channel) that are multiplexed on a single flowcell. Note that after running cellranger-atac mkfastq, we run a separate instance of the pipeline on each library:</p><p>In this example, we have one 10x library sequenced on two flowcells. Note that after running cellranger-atac mkfastq, we run a single instance of the pipeline on all the FASTQ files generated:</p><h3 id="Example-Data"><a href="#Example-Data" class="headerlink" title="Example Data"></a><strong>Example Data</strong></h3><p><code>cellranger-atac mkfastq</code> recognizes two file formats for describing samples: a simple, three-column CSV format, and the Illumina® Experiment Manager (IEM) sample sheet format used by bcl2fastq. There is an example below for running <code>mkfastq</code> with each format.</p><p>To follow along, please do the following:</p><ol><li><a href="http://cf.10xgenomics.com/supp/cell-atac/cellranger-atac-tiny-bcl-1.0.0.tar.gz" target="_blank" rel="noopener">Download the tiny-bcl tar file</a>.</li><li>Untar the tiny-bcl tar file in a convenient location. This will create a new tiny-bcl subdirectory.</li><li>Download the simple CSV layout file: <a href="http://cf.10xgenomics.com/supp/cell-atac/cellranger-atac-tiny-bcl-simple-1.0.0.csv" target="_blank" rel="noopener">cellranger-atac-tiny-bcl-simple-1.0.0.csv</a>.</li><li>Download the Illumina® Experiment Manager sample sheet: <a href="http://cf.10xgenomics.com/supp/cell-atac/cellranger-atac-tiny-bcl-samplesheet-1.0.0.csv" target="_blank" rel="noopener">cellranger-atac-tiny-bcl-samplesheet-1.0.0.csv</a>.</li></ol><h3 id="Running-mkfastq-with-a-simple-CSV-samplesheet"><a href="#Running-mkfastq-with-a-simple-CSV-samplesheet" class="headerlink" title="Running mkfastq with a simple CSV samplesheet"></a><strong>Running mkfastq with a simple CSV samplesheet</strong></h3><p><strong>We recommend the simple CSV samplesheet for most sequencing experiments.</strong> The simple CSV format has only three columns (Lane, Sample, Index), and is thus less prone to formatting errors. You can see an example of this in cellranger-atac-tiny-bcl-simple-1.0.0.csv:</p><pre><code>Lane,Sample,Index1,test_sample,SI-NA-C1</code></pre><p>Here are the options for each column:</p><ul><li><strong>Lane</strong>    Which lane(s) of the flowcell to process. Can be either a single lane, a range (e.g., 2-4) or ‘*’ for all lanes in the flowcell.</li><li><strong>Sample</strong>    The name of the sample. This name will be the prefix to all the generated FASTQs, and will correspond to the –sample argument in all downstream 10x pipelines.<br>Sample names must conform to the Illumina® bcl2fastq naming requirements. Only letters, numbers, underscores and hyphens are allowed; no other symbols, including dots (“.”) are allowed.</li><li><strong>Index</strong>    The 10x sample index set that was used in library construction, e.g., SI-NA-A12.</li></ul><p>To run <code>mkfastq</code> with a simple layout CSV, use the <code>--csv</code> argument. Here’s how to run <code>mkfastq</code> on the <code>tiny-bcl</code> sequencing run with the simple layout:</p><pre><code>$ cellranger-atac mkfastq --id=tiny-bcl \                     --run=/path/to/tiny_bcl \                     --csv=cellranger-atac-tiny-bcl-simple-1.0.0.csvcellranger-atac mkfastqCopyright (c) 2018 10x Genomics, Inc.  All rights reserved.-------------------------------------------------------------------------------Martian Runtime - 1.1.0-3.2.1Running preflight checks (please wait)...2018-08-09 16:33:54 [runtime] (ready)           ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.PREPARE_SAMPLESHEET2018-08-09 16:33:57 [runtime] (split_complete)  ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.PREPARE_SAMPLESHEET2018-08-09 16:33:57 [runtime] (run:local)       ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.PREPARE_SAMPLESHEET.fork0.chnk0.main2018-08-09 16:34:00 [runtime] (chunks_complete) ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.PREPARE_SAMPLESHEET...</code></pre><h3 id="Running-mkfastq-with-an-Illumina®-Experiment-Manager-sample-sheet"><a href="#Running-mkfastq-with-an-Illumina®-Experiment-Manager-sample-sheet" class="headerlink" title="Running mkfastq with an Illumina® Experiment Manager sample sheet"></a><strong>Running mkfastq with an Illumina® Experiment Manager sample sheet</strong></h3><p>The <code>cellranger-atac mkfastq</code> pipeline can also be run with a samplesheet in the Illumina® Experiment Manager (IEM) format. If you didn’t sequence with an i7 index, you’ll need to use this format. Let’s briefly look at <code>cellranger-atac-tiny-bcl-samplesheet-1.0.0.csv</code> before running the pipeline. You will see a number of fields specific to running on Illumina® platforms, and then a [Data] section.</p><p>That section is where to put your sample, lane and index information. Here’s an example:</p><pre><code>[Data]Lane,Sample_ID,index,Sample_Project1,Sample1,SI-NA-C1,tiny-bcl</code></pre><p>Here, <code>SI-NA-C1</code> refers to a 10x sample index, a set of four oligo sequences. cellranger-atac mkfastq also supports listing oligo sequences explicitly.</p><p>In this example, only reads from lane 1 will be used. To demultiplex the given sample index across all lanes, omit the lanes column entirely.</p><p>Sample names must conform to the Illumina® <code>bcl2fastq</code> naming requirements. Specifcally only letters, numbers, underscores and hyphens area allowed. No other symbols, including dots (.) are allowed.</p><p>Also note that while an authentic IEM sample sheet will contain other sections above the [Data] section, these are optional for demultiplexing. For demultiplexing an existing run with <code>cellranger-atac mkfastq</code>, only the [Data] section is required.</p><p>Next, run the <code>cellranger-atac mkfastq</code> pipeline, using the <code>--samplesheet</code> argument:</p><pre><code>$ cellranger-atac mkfastq --id=tiny-bcl \                     --run=/path/to/tiny_bcl \                     --samplesheet=cellranger-atac-tiny-bcl-samplesheet-1.0.0.csvcellranger-atac mkfastqCopyright (c) 2018 10x Genomics, Inc.  All rights reserved.-------------------------------------------------------------------------------Martian Runtime - 3.2.1Running preflight checks (please wait)...2018-08-09 16:25:49 [runtime] (ready)           ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.PREPARE_SAMPLESHEET2018-08-09 16:25:52 [runtime] (split_complete)  ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.PREPARE_SAMPLESHEET2018-08-09 16:25:52 [runtime] (run:local)       ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.PREPARE_SAMPLESHEET.fork0.chnk0.main2018-08-09 16:25:58 [runtime] (chunks_complete) ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.PREPARE_SAMPLESHEET...</code></pre><h3 id="Checking-FASTQ-output"><a href="#Checking-FASTQ-output" class="headerlink" title="Checking FASTQ output"></a>Checking FASTQ output</h3><p>Once the <code>cellranger-atac mkfastq</code> pipeline has successfully completed, the output can be found in a new folder named with the value you provided to <code>cellranger-atac mkfastq</code> in the <code>--id</code> option (if not specified, defaults to the name of the flowcell):</p><pre><code>$ ls -ldrwxr-xr-x 4 jdoe  jdoe     4096 Sep 13 12:05 tiny-bcl</code></pre><p>The key output files can be found in outs/fastq_path, and is organized in the same manner as a conventional bcl2fastq run:</p><pre><code>$ ls -l tiny-bcl/outs/fastq_path/drwxr-xr-x 3 jdoe jdoe         3 Aug  9 12:26 Reportsdrwxr-xr-x 2 jdoe jdoe         8 Aug  9 12:26 Statsdrwxr-xr-x 3 jdoe jdoe         3 Aug  9 12:26 tiny-bcl-rw-r--r-- 1 jdoe jdoe  20615106 Aug  9 12:26 Undetermined_S0_L001_I1_001.fastq.gz-rw-r--r-- 1 jdoe jdoe 151499694 Aug  9 12:26 Undetermined_S0_L001_R1_001.fastq.gz-rw-r--r-- 1 jdoe jdoe  52692701 Aug  9 12:26 Undetermined_S0_L001_R2_001.fastq.gz-rw-r--r-- 1 jdoe jdoe 151499694 Aug  9 12:26 Undetermined_S0_L001_R3_001.fastq.gz$ tree tiny-bcl/outs/fastq_path/tiny_bcl/tiny-bcl/outs/fastq_path/tiny_bcl/  Sample1    Sample1_S1_L001_I1_001.fastq.gz    Sample1_S1_L001_R1_001.fastq.gz    Sample1_S1_L001_R2_001.fastq.gz    Sample1_S1_L001_R3_001.fastq.gz</code></pre>]]></content>
      
      
      <categories>
          
          <category> Single-Cell-RNA-Sequencing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scRNA-Seq </tag>
            
            <tag> ATAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCALE准确鉴定单细胞ATAC-seq数据中染色质开放特征</title>
      <link href="/2019-10-30-SCALE%E5%87%86%E7%A1%AE%E9%89%B4%E5%AE%9A%E5%8D%95%E7%BB%86%E8%83%9EATAC-seq%E6%95%B0%E6%8D%AE%E4%B8%AD%E6%9F%93%E8%89%B2%E8%B4%A8%E5%BC%80%E6%94%BE%E7%89%B9%E5%BE%81/"/>
      <url>/2019-10-30-SCALE%E5%87%86%E7%A1%AE%E9%89%B4%E5%AE%9A%E5%8D%95%E7%BB%86%E8%83%9EATAC-seq%E6%95%B0%E6%8D%AE%E4%B8%AD%E6%9F%93%E8%89%B2%E8%B4%A8%E5%BC%80%E6%94%BE%E7%89%B9%E5%BE%81/</url>
      
        <content type="html"><![CDATA[<p>SCALE准确鉴定单细胞ATAC-seq数据中染色质开放特征</p><a id="more"></a><!-- toc --><p><strong>SCALE</strong>全称是Single-Cell ATAC-seq analysis vie Latent feature Extraction, 从名字中就能知道这个软件是通过隐特征提取的方式分析单细胞ATAC-seq数据。</p><p>在文章中，作者从开发者的角度列出了目前的scATAC-seq分析软件，chromVAR, scABC, cisTopic, scVI，发现每个软件都有一定的不足之处，而从我们软件使用者的角度，其实可以考虑都试试这些工具。</p><p>SCALE结合了深度生成模型(Depp Generative Models)变分自动编码器框架(Variational Autoencoder, VAE)与概率高斯混合模型(Gaussian Mixture Model, GMM)去学习隐特征，用于准确地鉴定scATAC-seq数据中的特征。</p><p>文章通过一张图来解释了软件的工作机制：</p><img src="/2019-10-30-SCALE%E5%87%86%E7%A1%AE%E9%89%B4%E5%AE%9A%E5%8D%95%E7%BB%86%E8%83%9EATAC-seq%E6%95%B0%E6%8D%AE%E4%B8%AD%E6%9F%93%E8%89%B2%E8%B4%A8%E5%BC%80%E6%94%BE%E7%89%B9%E5%BE%81/1.png" class=""><p>SCALE将sc-ATAC-seq的输入数据x(Cells-by-Peaks矩阵)建模成一个联合分布，</p><p>p(x,z,c)，c是GMM组件中对应的预定义的K个聚类，z是一个隐变量，是细胞在所有peak中实际可能的值，用于后续的聚类和可视化。z通过<br>z=μz+σZ×ϵ计算而得，公式里面的 μzσz是编码器网络从x中学习而得，<br>ϵ则是从 $\mathbb(0,\mathbf)$ 抽样而成。</p><p>从公式中我们还可以发现z其实和GMM的c有关，所以p(x,z,c)也可以写成P(x|z)p(z|c)p(c)，而p(c)是K个预定义聚类分布的离散概率分布，p(z|c)服从混合高斯分布，而p(x|z)则是服从多变量伯努利分布(multivartiable Bernoulli distribution), 通过解码者网络建模而成。<br>当然从一个软件使用者的角度而言，我们不会去关心代码，也不会关心原理，我们更关心的是这个工具能做什么。SCALE能做以下的分析<br>SCALE可以对隐特征聚类识别细胞类群<br>SCALE可以降噪，恢复缺失的peak<br>SCALE能够区分批次效应和生物学细胞类群之间的差异</p><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><p>推荐使用conda的方式进行软件安装（我测试过了，运行没有问题）</p><p>第一步：创建一个环境，名字就是 <code>SCALE</code>，并且启动该环境</p><pre><code>conda create -n SCALE python=3.6 pytorchconda activate SCALE</code></pre><p>第二步：从GitHub上克隆该项目</p><pre><code>git clone git://github.com/jsxlei/SCALE.git</code></pre><p>第三步：安装SCALE</p><pre><code>cd SCALEpython setup.py install</code></pre><p>之后分析的时候，只需要通过<code>conda activate SCALE</code>就能启动分析环境。</p><p>考虑后续要交互的读取数据和可视化，那么建议再安装一个Jupyter</p><pre><code>conda install jupyter</code></pre><h1 id="软件使用"><a href="#软件使用" class="headerlink" title="软件使用"></a>软件使用</h1><p>SCALE支持两类输入文件：</p><ul><li>count矩阵，行为peak，列为barcode</li><li>10X输出文件: count.mtx.gz, peak.tsv, barcode.tsv</li></ul><p>我们以官方提供的<strong>Forebrain</strong>数据集为例进行介绍，因为这个数据相对于另外一个数据集Mouse Atlas小多了。</p><p>我们在服务器上新建一个文件夹，用于存放从<a href="https://cloud.tsinghua.edu.cn/d/bda0332212154163a647/下载的数据" target="_blank" rel="noopener">https://cloud.tsinghua.edu.cn/d/bda0332212154163a647/下载的数据</a></p><pre><code>mkdir -p Forebrain</code></pre><p>保证Forebrain有下载好的数据</p><pre><code>$ ls Forebraindata.txt</code></pre><p>之后运行程序</p><pre><code>SCALE.py -d Forebrain/data.txt -k 8 --impute</code></pre><p>软件运行步骤为：</p><ul><li>加载数据: Loading data</li><li>模型训练: Training Model</li><li>输出结果: Saving imputed data</li></ul><p>其中模型训练这一步时间比较久，可以尝试用GPU加速（我是普通CPU服务器没有办法）。最终会在当前文件夹看到一个output文件夹，里面有如下内容:</p><ul><li><p>imputed_data.txt: 每个细胞在每个特征的推断值，建议用–binary保存二进制格式</p></li><li><p>model.pt: 用于重复结果的模型文件，–pretrain参数能够读取该模型</p></li><li><p>feature.txt: 每个细胞的隐特征，用于聚类和可视化</p></li><li><p>cluster_assignments.txt: 两列，barcode和所属类群</p></li><li><p>tsne.txt, tsne.pdf: tSNE的坐标和PDF文件，坐标文件可以导入到R语言进行可视化</p></li></ul><p>上面是命令行部分，下面则是Python环境进行交互式操作，输入jupyter notebook，之后在网页上打开</p><p>首先是导入各种Python库</p><pre><code>import pandas as pdimport numpy as npfrom sklearn.metrics import confusion_matrixfrom matplotlib import pyplot as pltimport seaborn as snsfrom scale.plot import plot_embedding, plot_heatmap</code></pre><p>然后加载分析结果，包括聚类信息和特征信息</p><pre><code>y = pd.read_csv(&#39;output/cluster_assignments.txt&#39;, sep=&#39;\t&#39;, index_col=0, header=None)[1].valuesfeature = pd.read_csv(&#39;output/feature.txt&#39;, sep=&#39;\t&#39;, index_col=0, header=None)</code></pre><p>通过热图展示不同聚类细胞之间的差异图</p><pre><code>plot_heatmap(feature.T, y,              figsize=(8, 3), cmap=&#39;RdBu_r&#39;, vmax=8, vmin=-8, center=0,             ylabel=&#39;Feature dimension&#39;, yticklabels=np.arange(10)+1,              cax_title=&#39;Feature value&#39;, legend_font=6, ncol=1,             bbox_to_anchor=(1.1, 1.1), position=(0.92, 0.15, .08, .04))</code></pre><img src="/2019-10-30-SCALE%E5%87%86%E7%A1%AE%E9%89%B4%E5%AE%9A%E5%8D%95%E7%BB%86%E8%83%9EATAC-seq%E6%95%B0%E6%8D%AE%E4%B8%AD%E6%9F%93%E8%89%B2%E8%B4%A8%E5%BC%80%E6%94%BE%E7%89%B9%E5%BE%81/2.png" class=""><p>如果要矫正批次效应，可以通过根据feature的heatmap，去掉和batch相关的feature来实现<br>我们可以展示SCALE对原始数据纠正后的值(imputed data), 该结果也能提高chromVAR鉴定motif的效果</p><pre><code>imputed = pd.read_csv(&#39;output/imputed_data.txt&#39;, sep=&#39;\t&#39;, index_col=0)</code></pre><p>展示聚类特异性的peak， 分析由<code>mat_specificity_score</code>和<code>cluster_specific</code>完成</p><pre><code>from scale.specifity import cluster_specific, mat_specificity_scorescore_mat = mat_specificity_score(imputed, y)peak_index, peak_labels = cluster_specific(score_mat, np.unique(y), top=200)plot_heatmap(imputed.iloc[peak_index], y=y, row_labels=peak_labels, ncol=3, cmap=&#39;Reds&#39;,              vmax=1, row_cluster=False, legend_font=6, cax_title=&#39;Peak Value&#39;,             figsize=(8, 10), bbox_to_anchor=(0.4, 1.2), position=(0.8, 0.76, 0.1, 0.015))</code></pre><img src="/2019-10-30-SCALE%E5%87%86%E7%A1%AE%E9%89%B4%E5%AE%9A%E5%8D%95%E7%BB%86%E8%83%9EATAC-seq%E6%95%B0%E6%8D%AE%E4%B8%AD%E6%9F%93%E8%89%B2%E8%B4%A8%E5%BC%80%E6%94%BE%E7%89%B9%E5%BE%81/3.png" class=""><h1 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h1><p>通过<code>SCALE.py -h</code>可以输出SCALE的所有可用参数</p><ul><li><p>-d/–dataset: 单个文件矩阵应该指定文件路径，10X输出的多个文件则是文件目录</p></li><li><p>-k: 设定输出结果的聚类数</p></li><li><p>-o: 输出文件路径</p></li><li><p>–pretrain: 读取之前训练的模型</p></li><li><p>–lr: 修改起始学习速率, 默认是0.002，和模型训练有关</p></li><li><p>–batch_size: 批处理大小， 默认就行，不需要修改（和批次效应处理无关）</p></li><li><p>-g GPU: 选择GPU设备数目，非GPU服务器用不到</p></li><li><p>–seed: 初始随机数种子，通常在遇到nan缺失时考虑修改</p></li><li><p>-encode_dim, -decode_dim: 编码器和解码器的维度，通常也不需要修改</p></li><li><p>-latent 隐藏层维度</p></li><li><p>–low, –high: 过滤低质量的peak, 即出现比例高于或者低于某个阈值的peak，默认是0.01和0.9。作者推荐保留1万-3万的peak用于SCALE分析。如果数据质量很高，且peak数不多于10万，那么可以不过滤。</p></li><li><p>–min_peaks: 过滤低质量细胞，如果该细胞的peak低于阈值</p></li><li><p>log_transform: log2(x+1)的变换</p></li><li><p>–max_iter: 最大迭代数，默认是30000, 可以观察损失收敛的情况来修改，也就是训练模型这一步输出的信息</p></li><li><p>-weight_decay: 没有说明</p></li><li><p>–impute: 保存推断数据，默认开启</p></li><li><p>–binary: 推荐加上该参数，减少imputed data占用空间</p></li><li><p>–no_tsne: 不需要保存t-SNE结果</p></li><li><p>–reference: 参考细胞类型</p></li><li><p>-t: 如果输出矩阵是列为peak，行为barcode，用该参数进行转置</p></li></ul><p>对于使用者而言，我们一般只用修改-k更改最后的聚类数，–low, –high, —min_peaks来对原始数据进行过滤，以及加上–binary节约空间。</p><p>假如在训练模型阶段，发现输出信息为loss=nan recon_loss=nan kl_loss=nan,十有八九最终会报错退出， 可以如下的参数调整</p><ul><li><p>更改–seed</p></li><li><p>用更加严格的条件过滤peak，例如-x 0.04 或 -x 0.06</p></li><li><p>降低初始的学习速率，–lr 0.0002</p></li></ul><p>ChIP-seq基本分析流程适用于ATAC-seq的前期分析。            </p>]]></content>
      
      
      <categories>
          
          <category> Single-Cell-RNA-Sequencing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scRNA-Seq </tag>
            
            <tag> ATAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCA analysis using GCAT</title>
      <link href="/2019-10-22-PCA_GCAT/"/>
      <url>/2019-10-22-PCA_GCAT/</url>
      
        <content type="html"><![CDATA[<p>PCA analysis using GCAT</p><a id="more"></a><!-- toc --><h1 id="About-GCAT"><a href="#About-GCAT" class="headerlink" title="About GCAT"></a>About GCAT</h1><p>GCAT(Genome-wide Complex Trait Analysis)在全基因组关联分析中是一款十分好用的软件，更多功能可去官网(<a href="http://cnsgenomics.com/software/gcta/#Overview)查看。在分析的时候计算LD，PCA以及关联分析我会选择GCTA，主要是可以多线程，且免编译安装，使用起来十分方便。" target="_blank" rel="noopener">http://cnsgenomics.com/software/gcta/#Overview)查看。在分析的时候计算LD，PCA以及关联分析我会选择GCTA，主要是可以多线程，且免编译安装，使用起来十分方便。</a><br><strong>GCTA</strong>(Genome-wide Complex Trait Analysis) was initially designed to estimate the proportion of phenotypic variance explained by all genome-wide SNPs for complex traits (i.e., the GREML method). It has been subsequently extended for many other analyses to better understand the genetic architecture of complex traits. GCTA currently supports the following analyses:<br><strong>GRM</strong>: estimating the genetic relationships among individuals in GWAS data;<br>Estimating the inbreeding coefficients of individuals in GWAS data;<br><strong>GREML</strong>: estimating the proportion of variance in a phenotype explained by all GWAS SNPs (i.e. the SNP-based heritability);<br>Partitioning the genetic variance onto individual chromosomes, MAF bins or functional categories;<br>Estimating the genetic variance attributed to the X chromosome, and testing for the effect of dosage compensation;<br><strong>GREMLd</strong>: estimating the dominance variance in unrelated individuals using GWAS data;<br><strong>Bivariate GREML</strong>: estimating the genetic correlation between two traits (diseases) using GWAS data;<br>PCA analysis and estimation of Fst in GWAS data;<br>Computing LD scores and searching for LD friends for a list of target SNPs;<br>Simulating a phenotype based on GWAS data;<br>Conditional &amp; joint (COJO) analysis of GWAS summary statistics without individual-level genotype data;<br><strong>mtCOJO</strong>: multi-trait-based conditional &amp; joint analysis using GWAS summary data;<br><strong>GSMR</strong>: generalised summary-data-based mendelian randomisaion;<br><strong>MLMA and MLMA-LOCO</strong>: mixed linear model association analysis;<br><strong>fastBAT</strong>: gene- or set-based association analysis;<br><strong>sBLUP</strong>: summary-data based BLUP analysis for genomic risk prediction;<br>Haseman-Elston regression to estimate the the SNP-based heritability for a trait and the genetic correlation between two traits;<br><strong>fastGWA</strong>: an extremely source-efficient (mixed) linear model association tool.</p><hr><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h1><p><strong>GCTA</strong>: A Tool for Genome-wide Complex Trait Analysis,Am J Hum Genet. 2011 Jan 7; 88(1): 76–82.(<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3014363/" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3014363/</a>)</p><hr><h1 id="software"><a href="#software" class="headerlink" title="software:"></a>software:</h1><p><strong>Genome-wide Complex Trait Analysis (GCTA)</strong>(<a href="http://cnsgenomics.com/software/gcta/#Overview" target="_blank" rel="noopener">http://cnsgenomics.com/software/gcta/#Overview</a>)</p><hr><h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1><p>下载后添加环境变量即可使用。</p><hr><h1 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h1><p>1.首先使用plink将vcf 格式的文件转化成所以.bed，.bim，.pam结尾的输入文件。</p><pre><code class="bash">./plink --allow-extra-chr --out myplink_test --recode --vcf Gpan.prune.in.vcf./plink --allow-extra-chr --file myplink_test --noweb --make-bed --out tmp</code></pre><p>2.利用GCTA进行PCA构建</p><pre><code class="bash">./gcta64 --bfile tmp --make-grm --autosome --out tmp./gcta64 --grm tmp --pca --out pcatmp</code></pre><p>3.运行玩后会生成三个文件</p><pre><code class="bash">-rw-r----- 1 hhu pawsey0149 1.1K Oct  5 12:32 pcatmp.log-rw-r----- 1 hhu pawsey0149 8.0K Oct  5 12:32 pcatmp.eigenval-rw-r----- 1 hhu pawsey0149  45K Oct  5 12:34 pcatmp.eigenvec</code></pre><p>打开用以后续分析的pcatmp.eigenvec查看一下.</p><p>4.打开文本编辑器，将下面这一行加到分析文件的第一行中，以便后面的分析：</p><pre><code class="bash">ID Group PC1 PC2 PC3 ...</code></pre><p>5.使用的R包进行可视化，这里没有具体将每个个体就行分群，我全部标记为一个组。真实的结果是根据你strcture图或者系统进化树对群体进行适当的分组，这样画出来的效果会更好，图例中PC1,PC2,PC3的值根据你生成的pcatmp.eigenval文件来。</p><pre><code class="{r">setwd(&quot;F:\\you_scripts\\gcta&quot;)library(ggplot2)#pdf(file=&quot;apvc12hweDEL46.pca_gcat.plot.pdf&quot;)data &lt;-read.table(file=&quot;apvc12hweDEL46_gcta.eigenvec&quot;,header=T)par(mfrow&lt;-c(3,1))ggplot(data = data, aes(x = PC1, y = PC2, group = Group)) +  geom_point(alpha = 0.5) + xlab(&quot;PC1&quot;) + ylab(&quot;PC2&quot;)ggplot(data = data, aes(x = PC1, y = PC3, group = Group)) +  geom_point(alpha = 0.5) + xlab(&quot;PC1&quot;) + ylab(&quot;PC3&quot;)ggplot(data = data, aes(x = PC2, y = PC3, group = Group)) +  geom_point(alpha = 0.5) + xlab(&quot;PC2&quot;) + ylab(&quot;PC3&quot;)#dev.off()</code></pre>]]></content>
      
      
      <categories>
          
          <category> PCA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PCA </tag>
            
            <tag> GCAT </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
